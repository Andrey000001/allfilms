{"mappings":"A,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,I,G,E,S,E,UECA,KAAM,CAAA,QAAE,CAAO,CAAA,aAAE,CAAY,CAAA,eAAE,CAAc,CAAA,MAAE,CAAK,CAAE,CAAG,EAAA,OAAG,CAC7C,eAAA,EAA2B,EAAO,CAAC,EAEhD,EAAM,SAAS,CAAC,GAAG,CAAC,UACpB,GAAI,CACF,IAAM,EAAoB,MAAM,MAC9B,CAAC,EAAE,EAAa,SAAS,EAAE,EAAQ,MAAM,EAAE,EAAK,CAAC,EAEnD,GAAI,CAAC,EAAkB,EAAE,CACvB,MAAM,AAAI,MAAM,EAAkB,UAAU,EAE9C,IAAM,EAAgB,MAAM,EAAkB,IAAI,GAE5C,EAAgB,MAAM,QAAQ,GAAG,CACrC,EAAc,OAAO,CAAC,GAAG,CAAC,MAAM,IAC9B,GAAI,CACF,IAAM,EAAW,MAAM,MACrB,CAAC,EAAE,EAAe,EAAE,EAAQ,EAAE,CAAC,SAAS,EAAE,EAAQ,+BAA+B,CAAC,EAEpF,GAAI,CAAC,EAAS,EAAE,CACd,MAAM,AAAI,MAAM,EAAS,UAAU,EAGrC,OADa,MAAM,EAAS,IAAI,EAElC,CAAE,MAAO,EAAO,CACd,QAAQ,GAAG,CAAC,oCAAqC,EAEnD,CACF,IAIF,OAFA,EAAM,SAAS,CAAC,MAAM,CAAC,UAEhB,CACT,CAAE,MAAO,EAAO,CACd,QAAQ,GAAG,CAAC,6BAA8B,EAC5C,CACF,C,I,E,E,SCpCA,KAAM,CAAA,MAAE,CAAK,CAAE,CAAG,EAAA,OAAG,CACnB,eAAe,EAAa,CAAI,EAC9B,GAAI,CASF,IAAM,EAAS,AAPc,EAAK,MAAM,CAAC,AAAA,IACvC,GAAI,AAAC,GAAU,AAAuB,OAAvB,EAAO,WAAW,CAGjC,OAAO,CACT,GAGG,GAAG,CAAC,CAAC,CAAA,MAAE,CAAK,CAAA,YAAE,CAAW,CAAA,OAAE,CAAM,CAAA,aAAE,CAAY,CAAA,GAAE,CAAE,CAAC,IACnD,IAAI,EAAO,EAAO,GAAG,CAAC,AAAA,GAAQ,EAAK,IAAI,EAAE,IAAI,CAAC,MAC1C,EAAY,EAAa,KAAK,CAAC,EAAG,GAEtC,MAAO,CAAC;6CAC2B,EAAE,EAAG;;0DAEQ,EAAE,EAAY;;yDAEf,EAAE,EAAM;+DACF,EAAE,EAAK,SAAS,EAAE,EAAU;;;mBAGxE,CAAC,AACZ,GACC,IAAI,CAAC,KACR,EAAM,kBAAkB,CAAC,YAAa,EACxC,CAAE,MAAO,EAAO,CACd,QAAQ,GAAG,CAAC,EACd,CACF,C,I,E,E,S,E,E,S,E,E,SEhCF,KAAM,CAAA,MAAC,CAAK,CAAC,CAAG,EAAA,OAAG,CAEJ,SAAA,IACX,EAAM,SAAS,CAAG,EACtB,C,I,E,E,SDAA,KAAM,CAAA,WAAE,CAAU,CAAA,eAAE,CAAc,CAAA,QAAE,CAAO,CAAA,eAAE,CAAc,CAAA,MAAE,CAAK,CAAA,WAAE,CAAU,CAAC,CAAG,EAAA,OAAG,CAoErF,AAAA,CAAA,EAAA,EAAA,OAAS,AAAT,I,I,E,E,SEpEA,KAAM,CAAA,QAAE,CAAO,CAAA,aAAE,CAAY,CAAA,WAAE,CAAU,CAAA,UAAE,CAAS,CAAE,CAAG,EAAA,OAAG,CAE7C,eAAA,EAA0B,EAAO,CAAC,EAE/C,IAAM,EAAW,MAAM,MACrB,CAAC,EAAE,EAAa,SAAS,EAAE,EAAQ,MAAM,EAAE,EAAK,CAAC,EAa7C,CAAA,eACJ,CAAc,CAAA,YACd,CAAW,CAAA,YACX,CAAW,CAAA,WACX,CAAU,CAAA,kBACV,CAAiB,CAAA,gBACjB,CAAe,CAChB,CAhBY,CACX,eAAgB,AAHL,CAAA,MAAM,EAAS,IAAI,EAAhC,EAGuB,WAAW,CAChC,YAAa,EACb,YAAa,EAAE,CACf,WAAY,EACZ,kBAAmB,EACnB,gBAAiB,SAAS,aAAa,CAAC,WAC1C,EAYA,GAAI,GAAkB,EACpB,IAAK,IAAI,EAAI,EAAG,GAAK,EAAgB,IACnC,EAAY,IAAI,CAAC,QAInB,GAAI,GAAe,EAAoB,EAAG,CACxC,IAAK,IAAI,EAAI,EAAG,GAAK,EAAa,EAAG,GAAK,EACxC,EAAY,IAAI,CAAC,GAEnB,EAAY,IAAI,CAAC,OACjB,EAAY,IAAI,CAAC,EACnB,MAAO,GAAI,GAAe,EAAiB,EAAmB,CAC5D,EAAY,IAAI,CAAC,GACjB,EAAY,IAAI,CAAC,OACjB,IACE,IAAI,EAAI,EAAiB,EAAa,EACtC,GAAK,EACL,GAAK,EAEL,EAAY,IAAI,CAAC,EAErB,KAAO,CACL,EAAY,IAAI,CAAC,GACjB,EAAY,IAAI,CAAC,OACjB,IACE,IAAI,EAAI,EAAc,EACtB,GAAK,EAAc,EACnB,GAAK,EAEL,EAAY,IAAI,CAAC,GAEnB,EAAY,IAAI,CAAC,OACjB,EAAY,IAAI,CAAC,EACnB,CAGF,IAAM,EAAkB,EACrB,GAAG,CAAC,AAAC,IACJ,GAAI,AAAW,QAAX,EACF,MAAO,CAAC,MAAM,EAAE,EAAO,OAAO,CAAC,AAC1B,EACL,IAAM,EAAc,IAAS,EAAS,WAAa,GACnD,MAAO,CAAC,8BAA8B,EAAE,EAAY,aAAa,EAAE,EAAO,EAAE,EAAE,EAAO,SAAS,CAAC,AACjG,CACF,GACC,IAAI,CAAC,GAGR,CAAA,EAAgB,SAAS,CAAG,EAC5B,EAAW,QAAQ,CAAG,IAAS,EAC/B,EAAU,QAAQ,CAAG,AAAS,IAAT,EAErB,SAAS,gBAAgB,CAAC,mBAAmB,OAAO,CAAC,AAAC,IACpD,EAAO,gBAAgB,CAAC,QAAS,UAC/B,IAAM,EAAU,SAAS,EAAO,OAAO,CAAC,IAAI,EAC5C,QAAQ,GAAG,CAAC,GACP,MAAM,KACT,AAAA,IAEA,AAAA,EADa,MAAM,AAAA,EAAY,IAE/B,EAAW,GAEf,EACF,EACF,C,I,E,E,SL3FA,IAAI,EAAO,EAEX,KAAM,CAAA,WAAE,CAAU,CAAA,UAAE,CAAS,CAAE,CAAG,EAAA,OAAG,EAErC,AAEA,iBACE,IAAM,EAAO,MAAM,AAAA,EAAY,EAC/B,OAAM,AAAA,EAAa,GACnB,AAAA,GACF,IA2BA,KAAM,CAAA,gBAAE,CAAe,CAAA,iBAAE,CAAgB,CAAE,CAzB5B,CACb,iBAAkB,UAChB,GAAQ,EACR,GAAI,CACF,AAAA,IACA,IAAM,EAAO,MAAM,AAAA,EAAY,GAC/B,AAAA,EAAa,GACb,AAAA,EAAW,EACb,CAAE,MAAO,EAAO,CACd,QAAQ,KAAK,CAAC,EAChB,CACF,EACA,gBAAiB,UACf,GAAQ,EACR,GAAI,CACF,AAAA,IACA,IAAM,EAAO,MAAM,AAAA,EAAY,GAC/B,AAAA,EAAa,GACb,AAAA,EAAW,EACb,CAAE,MAAO,EAAO,CACd,QAAQ,KAAK,CAAC,EAChB,CACF,CACF,EAIA,EAAU,gBAAgB,CAAC,QAAS,GACpC,EAAW,gBAAgB,CAAC,QAAS,GGvCnC,EAAW,gBAAgB,CAAC,SAAU,MAAO,IAC3C,EAAE,cAAc,GAChB,IAAM,EAAU,EAAE,aAAa,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,GACnD,GAAG,CAAC,EAAS,CACX,AAAA,CAAA,EAAA,EAAA,MAAK,AAAL,EAAO,IAAI,CAAC,iCACZ,MACF,CACA,EAAM,SAAS,CAAC,GAAG,CAAC,UACpB,GAAI,CAEJ,IAAM,EAAW,MAAM,MACrB,CAAC,EAAE,EAAe,SAAS,EAAE,EAAQ,OAAO,EAAE,EAAQ,CAAC,EAEnD,EAAO,MAAM,EAAS,IAAI,GAChC,GAAI,AAAqB,IAArB,EAAK,WAAW,EAAU,AAAuB,IAAvB,EAAK,aAAa,CAAQ,CACtD,AAAA,CAAA,EAAA,EAAA,MAAK,AAAL,EAAO,IAAI,CAAC,kCACZ,MACF,CAAM,CACJ,IAAM,EAAgB,MAAM,EAAK,OAAO,CAAC,MAAM,CAAC,AAAC,IAC/C,GAAG,AAAC,GAAQ,AAAqB,OAArB,EAAK,WAAW,CAG5B,OAAO,CACX,GAEM,EAAU,MAAM,EAAc,GAAG,CAAC,CAAC,CAAA,GAAE,CAAE,CAAE,GAAK,GAE9C,EAAkB,MAAM,QAAQ,GAAG,CACvC,EAAQ,GAAG,CAAC,MAAO,IACjB,IAAM,EAAW,MAAM,MACrB,CAAC,EAAE,EAAe,EAAE,EAAI,SAAS,EAAE,EAAQ,CAAC,EAKxC,CAAA,MAAE,CAAK,CAAA,YAAE,CAAW,CAAA,aAAE,CAAY,CAAA,OAAE,CAAM,CAAE,CADrC,MAAM,EAAS,IAAI,GAE1B,EAAQ,EAAO,GAAG,CAAC,CAAC,CAAA,KAAE,CAAI,CAAE,GAAK,GAAM,IAAI,CAAC,KAC5C,EAAc,EAAa,KAAK,CAAC,EAAE,GACzC,MAAO,CAAC;6CAC2B,EAAE,EAAI;;sFAEmC,EAAE,EAAY,OAAO,EAAE,EAAM;;8DAErD,EAAE,EAAM;oEACF,EAAE,EAAM,CAAC,EAAE,EAAY;;;mBAGxE,CAAC,AACZ,IAEF,AAAA,CAAA,EAAA,EAAA,MAAK,AAAL,EAAO,OAAO,CAAC,CAAC;YACV,EAAE,EAAK,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAEnC,AAAA,IACA,EAAW,KAAK,CAAC,OAAO,CAAG,OAC3B,EAAM,SAAS,CAAG,EAAgB,IAAI,CAAC,IACvC,CAEF,CAAC,MAAM,EAAO,CACZ,QAAQ,KAAK,CAAC,0CAA0C,QAAQ,KAAK,GACvE,QAAS,CACP,EAAM,SAAS,CAAC,MAAM,CAAC,SACzB,CACA,GHrBJ,AAAA,CAAA,EAAA,EAAA,OAAa,AAAb","sources":["<anon>","src/index.js","src/js/fetchMovie.js","src/js/createMarkup.js","src/js/serchMovie.js","src/js/clearPage.js","src/js/plagination.js"],"sourcesContent":["\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequired7c6\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequired7c6\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $krGWQ = parcelRequire(\"krGWQ\");\n\nvar $krGWQ = parcelRequire(\"krGWQ\");\nconst { API_KEY: $a0cac08c197f45b6$var$API_KEY, BASE_URL_ALL: $a0cac08c197f45b6$var$BASE_URL_ALL, BASE_URL_GENRE: $a0cac08c197f45b6$var$BASE_URL_GENRE, cards: $a0cac08c197f45b6$var$cards } = (0, $krGWQ.default);\nasync function $a0cac08c197f45b6$export$2e2bcd8739ae039(page = 1) {\n    //Получаем все фильмы\n    $a0cac08c197f45b6$var$cards.classList.add(\"loader\");\n    try {\n        const allMoviesResponse = await fetch(`${$a0cac08c197f45b6$var$BASE_URL_ALL}?api_key=${$a0cac08c197f45b6$var$API_KEY}&page=${page}`);\n        if (!allMoviesResponse.ok) throw new Error(allMoviesResponse.statusText);\n        const allMoviesData = await allMoviesResponse.json();\n        const genreRequests = await Promise.all(allMoviesData.results.map(async (movieId)=>{\n            try {\n                const response = await fetch(`${$a0cac08c197f45b6$var$BASE_URL_GENRE}${movieId.id}?api_key=${$a0cac08c197f45b6$var$API_KEY}&include_image_language=en,null`);\n                if (!response.ok) throw new Error(response.statusText);\n                const data = await response.json();\n                return data;\n            } catch (error) {\n                console.log(\"Error fetching genre information:\", error);\n            }\n        }));\n        $a0cac08c197f45b6$var$cards.classList.remove(\"loader\");\n        //Возвращем все инфу по ID\n        return genreRequests;\n    } catch (error) {\n        console.log(`Error fetching all movies:`, error);\n    }\n}\n\n\n\nvar $krGWQ = parcelRequire(\"krGWQ\");\nconst { cards: $bb2db7a89a40ba72$var$cards } = (0, $krGWQ.default);\nasync function $bb2db7a89a40ba72$export$24783e9f3a24abe4(data) {\n    try {\n        //Отбираем те в которых есть фото и нет ошибки\n        const successfulMoviesData = data.filter((movies)=>{\n            if (!movies || movies.poster_path === null) return;\n            return movies;\n        });\n        const markup = successfulMoviesData.map(({ title: title, poster_path: poster_path, genres: genres, release_date: release_date, id: id })=>{\n            let genr = genres.map((item)=>item.name).join(\", \");\n            let dateMovie = release_date.slice(0, 4);\n            return `\n              <li class=\"page-item\" data-id=\"${id}\">\n                 <a href=\"#\" class=\"page-item__link\">\n                 <img src=\"https://image.tmdb.org/t/p/w500${poster_path}\">\n                 <div class=\"page-description\">\n                     <h2 class=\"page-description__title\">${title}</h2>\n                     <p class=\"page-description__podscription\">${genr} <span>| ${dateMovie}</span></p>\n                 </div>\n                 </a>\n              </li>`;\n        }).join(\" \");\n        $bb2db7a89a40ba72$var$cards.insertAdjacentHTML(\"beforeend\", markup);\n    } catch (error) {\n        console.log(error);\n    }\n}\n\n\n\nvar $krGWQ = parcelRequire(\"krGWQ\");\n\nvar $1GAPJ = parcelRequire(\"1GAPJ\");\n\nvar $krGWQ = parcelRequire(\"krGWQ\");\nconst { cards: $a6be473e5430189c$var$cards } = (0, $krGWQ.default);\nfunction $a6be473e5430189c$export$2e2bcd8739ae039() {\n    $a6be473e5430189c$var$cards.innerHTML = \"\";\n}\n\n\n\nvar $9Uhgk = parcelRequire(\"9Uhgk\");\nconst { formSubmit: $615b248ed863778a$var$formSubmit, BASE_URL_QUERY: $615b248ed863778a$var$BASE_URL_QUERY, API_KEY: $615b248ed863778a$var$API_KEY, BASE_URL_GENRE: $615b248ed863778a$var$BASE_URL_GENRE, cards: $615b248ed863778a$var$cards, pagination: $615b248ed863778a$var$pagination } = (0, $krGWQ.default);\nfunction $615b248ed863778a$export$2e2bcd8739ae039() {\n    $615b248ed863778a$var$formSubmit.addEventListener(\"submit\", async (e)=>{\n        e.preventDefault();\n        const request = e.currentTarget.serchQuary.value.trim();\n        if (!request) {\n            (0, $1GAPJ.Notify).info(\"You have not entered anything\");\n            return;\n        }\n        $615b248ed863778a$var$cards.classList.add(\"loader\");\n        try {\n            //Проверяем на ошибки\n            const response = await fetch(`${$615b248ed863778a$var$BASE_URL_QUERY}?api_key=${$615b248ed863778a$var$API_KEY}&query=${request}`);\n            const data = await response.json();\n            if (data.total_pages === 0 || data.total_results === 0) {\n                (0, $1GAPJ.Notify).info(\"Nothing found for your request\");\n                return;\n            } else {\n                const successMovies = await data.results.filter((item)=>{\n                    if (!item || item.poster_path === null) return;\n                    return item;\n                });\n                //Получаем все ID\n                const results = await successMovies.map(({ id: id })=>id);\n                const renderingMarkup = await Promise.all(results.map(async (ids)=>{\n                    const response = await fetch(`${$615b248ed863778a$var$BASE_URL_GENRE}${ids}?api_key=${$615b248ed863778a$var$API_KEY}`);\n                    //Обработка данных\n                    const data = await response.json();\n                    const { title: title, poster_path: poster_path, release_date: release_date, genres: genres } = data;\n                    const genre = genres.map(({ name: name })=>name).join(\" \");\n                    const releaseDate = release_date.slice(0, 4);\n                    return `\n              <li class=\"page-item\" data-id=\"${ids}\">\n                  <a href=\"#\" class=\"page-item__link\">\n                      <img class=\"page-item__img\" src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"${title}\"/>\n                      <div class=\"page-description\">\n                          <h2 class=\"page-description__title\">${title}</h2>\n                          <p class=\"page-description__podscription\">${genre} ${releaseDate}</p>\n                      </div>\n                  </a>\n              </li>`;\n                }));\n                (0, $1GAPJ.Notify).success(`According to your request\n      found ${data.results.length} films`);\n                //Очищаем и пушим\n                (0, $a6be473e5430189c$export$2e2bcd8739ae039)();\n                $615b248ed863778a$var$pagination.style.display = \"none\";\n                $615b248ed863778a$var$cards.innerHTML = renderingMarkup.join(\" \");\n            }\n        } catch (error) {\n            console.error(\"An error occurred while delivering data\", console.error());\n        } finally{\n            $615b248ed863778a$var$cards.classList.remove(\"loader\");\n        }\n    });\n}\n(0, $9Uhgk.default)();\n\n\n\nvar $krGWQ = parcelRequire(\"krGWQ\");\n\n\n\nconst { API_KEY: $ad96d6d838aa2c0e$var$API_KEY, BASE_URL_ALL: $ad96d6d838aa2c0e$var$BASE_URL_ALL, arrowRight: $ad96d6d838aa2c0e$var$arrowRight, arrowLeft: $ad96d6d838aa2c0e$var$arrowLeft } = (0, $krGWQ.default);\nasync function $ad96d6d838aa2c0e$export$2e2bcd8739ae039(page = 1) {\n    //Запрос\n    const response = await fetch(`${$ad96d6d838aa2c0e$var$BASE_URL_ALL}?api_key=${$ad96d6d838aa2c0e$var$API_KEY}&page=${page}`);\n    const data = await response.json();\n    const reft = {\n        totalPageCount: data.total_pages,\n        currentPage: page,\n        pageNumbers: [],\n        maxPageBtn: 9,\n        nearEdgeThreshold: 3,\n        pageNumbersHtml: document.querySelector(\".js-list\")\n    };\n    const { totalPageCount: totalPageCount, currentPage: currentPage, pageNumbers: pageNumbers, maxPageBtn: maxPageBtn, nearEdgeThreshold: nearEdgeThreshold, pageNumbersHtml: pageNumbersHtml } = reft;\n    // Проверка на страницы \n    if (totalPageCount <= maxPageBtn) for(let i = 1; i <= totalPageCount; i++)pageNumbers.push(i);\n    else {\n        // 1                 3  + 1\n        if (currentPage <= nearEdgeThreshold + 1) {\n            for(let i = 1; i <= maxPageBtn - 2; i += 1)pageNumbers.push(i);\n            pageNumbers.push(\"...\");\n            pageNumbers.push(totalPageCount);\n        } else if (currentPage >= totalPageCount - nearEdgeThreshold) {\n            pageNumbers.push(1);\n            pageNumbers.push(\"...\");\n            for(let i = totalPageCount - maxPageBtn + 3; i <= totalPageCount; i += 1)pageNumbers.push(i);\n        } else {\n            pageNumbers.push(1);\n            pageNumbers.push(\"...\");\n            for(let i = currentPage - nearEdgeThreshold; i <= currentPage + nearEdgeThreshold; i += 1)pageNumbers.push(i);\n            pageNumbers.push(\"...\");\n            pageNumbers.push(totalPageCount);\n        }\n    }\n    //Добовляем isactive на кнопку \n    const pageNumbersHTML = pageNumbers.map((number)=>{\n        if (number === \"...\") return `<span>${number}</span>`;\n        else {\n            const activeClass = page === number ? \"isactive\" : \"\";\n            return `<button class=\"js-page-number ${activeClass}\" data-page=\"${number}\">${number}</button>`;\n        }\n    }).join(\"\");\n    pageNumbersHtml.innerHTML = pageNumbersHTML;\n    $ad96d6d838aa2c0e$var$arrowRight.disabled = page === totalPageCount;\n    $ad96d6d838aa2c0e$var$arrowLeft.disabled = page === 1;\n    document.querySelectorAll(\".js-page-number\").forEach((button)=>{\n        button.addEventListener(\"click\", async ()=>{\n            const newPage = parseInt(button.dataset.page);\n            console.log(newPage);\n            if (!isNaN(newPage)) {\n                (0, $a6be473e5430189c$export$2e2bcd8739ae039)();\n                const data = await (0, $a0cac08c197f45b6$export$2e2bcd8739ae039)(page);\n                (0, $bb2db7a89a40ba72$export$24783e9f3a24abe4)(data);\n                $ad96d6d838aa2c0e$export$2e2bcd8739ae039(newPage);\n            }\n        });\n    });\n}\n\n\n\n\nvar $4aAp5 = parcelRequire(\"4aAp5\");\nlet $1f0dc3b9307be026$var$page = 1;\nconst { arrowRight: $1f0dc3b9307be026$var$arrowRight, arrowLeft: $1f0dc3b9307be026$var$arrowLeft } = (0, $krGWQ.default);\n$1f0dc3b9307be026$var$init();\nasync function $1f0dc3b9307be026$var$init() {\n    const data = await (0, $a0cac08c197f45b6$export$2e2bcd8739ae039)($1f0dc3b9307be026$var$page);\n    await (0, $bb2db7a89a40ba72$export$24783e9f3a24abe4)(data);\n    (0, $ad96d6d838aa2c0e$export$2e2bcd8739ae039)();\n}\nconst $1f0dc3b9307be026$var$arrows = {\n    handleRightClick: async ()=>{\n        $1f0dc3b9307be026$var$page += 1;\n        try {\n            (0, $a6be473e5430189c$export$2e2bcd8739ae039)();\n            const data = await (0, $a0cac08c197f45b6$export$2e2bcd8739ae039)($1f0dc3b9307be026$var$page);\n            (0, $bb2db7a89a40ba72$export$24783e9f3a24abe4)(data);\n            (0, $ad96d6d838aa2c0e$export$2e2bcd8739ae039)($1f0dc3b9307be026$var$page);\n        } catch (error) {\n            console.error(error);\n        }\n    },\n    handleLeftClick: async ()=>{\n        $1f0dc3b9307be026$var$page -= 1;\n        try {\n            (0, $a6be473e5430189c$export$2e2bcd8739ae039)();\n            const data = await (0, $a0cac08c197f45b6$export$2e2bcd8739ae039)($1f0dc3b9307be026$var$page);\n            (0, $bb2db7a89a40ba72$export$24783e9f3a24abe4)(data);\n            (0, $ad96d6d838aa2c0e$export$2e2bcd8739ae039)($1f0dc3b9307be026$var$page);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n};\nconst { handleLeftClick: $1f0dc3b9307be026$var$handleLeftClick, handleRightClick: $1f0dc3b9307be026$var$handleRightClick } = $1f0dc3b9307be026$var$arrows;\n$1f0dc3b9307be026$var$arrowLeft.addEventListener(\"click\", $1f0dc3b9307be026$var$handleLeftClick);\n$1f0dc3b9307be026$var$arrowRight.addEventListener(\"click\", $1f0dc3b9307be026$var$handleRightClick);\n(0, $615b248ed863778a$export$2e2bcd8739ae039)();\n(0, $4aAp5.default)();\n\n\n//# sourceMappingURL=index.6fd1ed26.js.map\n","import refs from './js/refs';\nimport fetchMovies from './js/fetchMovie';\nimport { createMarkup } from './js/createMarkup';\nimport searchforNameMovie from './js/serchMovie';\nimport updatePage from './js/plagination';\nimport clearPage from './js/clearPage';\nimport touchMovieInfo from './js/currentMuvie';\nlet page = 1;\n\nconst { arrowRight ,arrowLeft } = refs;\n\ninit();\n\nasync function init() {\n  const data = await fetchMovies(page);\n  await createMarkup(data);\n  updatePage();\n}\n\nconst arrows = {\n  handleRightClick: async () => {\n    page += 1;\n    try {\n      clearPage();\n      const data = await fetchMovies(page);\n      createMarkup(data);\n      updatePage(page);\n    } catch (error) {\n      console.error(error);\n    }\n  },\n  handleLeftClick: async () => {\n    page -= 1;\n    try {\n      clearPage();\n      const data = await fetchMovies(page);\n      createMarkup(data);\n      updatePage(page);\n    } catch (error) {\n      console.error(error);\n    }\n  },\n};\n\nconst { handleLeftClick, handleRightClick } = arrows;\n\narrowLeft.addEventListener('click', handleLeftClick);\narrowRight.addEventListener('click', handleRightClick);\n\nsearchforNameMovie();\ntouchMovieInfo()\n\n","import refs from './refs';\nconst { API_KEY, BASE_URL_ALL, BASE_URL_GENRE ,cards } = refs;\nexport default async function fetchMovies(page = 1) {\n  //Получаем все фильмы\n  cards.classList.add('loader')\n  try {\n    const allMoviesResponse = await fetch(\n      `${BASE_URL_ALL}?api_key=${API_KEY}&page=${page}`\n    );\n    if (!allMoviesResponse.ok) {\n      throw new Error(allMoviesResponse.statusText);\n    }\n    const allMoviesData = await allMoviesResponse.json();\n\n    const genreRequests = await Promise.all(\n      allMoviesData.results.map(async movieId => {\n        try {\n          const response = await fetch(\n            `${BASE_URL_GENRE}${movieId.id}?api_key=${API_KEY}&include_image_language=en,null`\n          );\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n          const data = await response.json();\n          return data;\n        } catch (error) {\n          console.log('Error fetching genre information:', error);\n\n        }\n      })\n    );\n    cards.classList.remove('loader')\n    //Возвращем все инфу по ID\n    return genreRequests;\n  } catch (error) {\n    console.log(`Error fetching all movies:`, error);\n  }\n}\n","import refs from \"./refs\";\nconst { cards } = refs;\n  async function createMarkup(data) {\n    try {\n      //Отбираем те в которых есть фото и нет ошибки\n      const successfulMoviesData = data.filter(movies => {\n        if (!movies || movies.poster_path === null) {\n          return;\n        }\n        return movies;\n      });\n\n      const markup = successfulMoviesData\n        .map(({ title, poster_path, genres, release_date ,id}) => {\n          let genr = genres.map(item => item.name).join(', ');\n          let dateMovie = release_date.slice(0, 4);\n  \n          return `\n              <li class=\"page-item\" data-id=\"${id}\">\n                 <a href=\"#\" class=\"page-item__link\">\n                 <img src=\"https://image.tmdb.org/t/p/w500${poster_path}\">\n                 <div class=\"page-description\">\n                     <h2 class=\"page-description__title\">${title}</h2>\n                     <p class=\"page-description__podscription\">${genr} <span>| ${dateMovie}</span></p>\n                 </div>\n                 </a>\n              </li>`;\n        })\n        .join(' ');\n      cards.insertAdjacentHTML('beforeend', markup);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  export {createMarkup}","import refs from './refs';\nimport { Notify } from 'notiflix';\nimport clearPage from './clearPage';\nimport updateText from './updateText';\n\nconst { formSubmit, BASE_URL_QUERY, API_KEY, BASE_URL_GENRE, cards ,pagination} = refs;\n\nexport default function searchforNameMovie() {\n  formSubmit.addEventListener('submit', async (e) => {\n    e.preventDefault();\n    const request = e.currentTarget.serchQuary.value.trim();\n      if(!request) {\n        Notify.info('You have not entered anything')\n        return\n      }\n      cards.classList.add('loader')\n      try {\n        //Проверяем на ошибки\n      const response = await fetch(\n        `${BASE_URL_QUERY}?api_key=${API_KEY}&query=${request}`\n      );\n      const data = await response.json();\n      if (data.total_pages === 0 || data.total_results === 0) {\n        Notify.info('Nothing found for your request')\n        return\n      }else {\n        const successMovies = await data.results.filter((item)=>  {\n          if(!item || item.poster_path === null ) {\n              return\n          }\n          return item\n      })\n      //Получаем все ID\n      const results = await successMovies.map(({ id }) => id);\n  \n      const renderingMarkup = await Promise.all(\n        results.map(async (ids) => {\n          const response = await fetch(\n            `${BASE_URL_GENRE}${ids}?api_key=${API_KEY}`\n          );\n\n          //Обработка данных\n          const data = await response.json();\n          const { title, poster_path, release_date, genres } = data;\n          const genre = genres.map(({ name }) => name).join(' ');\n          const releaseDate = release_date.slice(0,4) \n          return `\n              <li class=\"page-item\" data-id=\"${ids}\">\n                  <a href=\"#\" class=\"page-item__link\">\n                      <img class=\"page-item__img\" src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"${title}\"/>\n                      <div class=\"page-description\">\n                          <h2 class=\"page-description__title\">${title}</h2>\n                          <p class=\"page-description__podscription\">${genre} ${releaseDate}</p>\n                      </div>\n                  </a>\n              </li>`;\n        })\n      );\n      Notify.success(`According to your request\n      found ${data.results.length} films`)\n      //Очищаем и пушим\n      clearPage();\n      pagination.style.display = 'none'\n      cards.innerHTML = renderingMarkup.join(' ');\n      }\n     \n    }catch(error) {\n      console.error('An error occurred while delivering data',console.error());\n    }finally {\n      cards.classList.remove('loader')\n    }\n    })\n}\nupdateText()\n\n\n","import refs from \"./refs\";\nconst {cards} = refs\n\nexport default function clearPage() {\n    cards.innerHTML = '';\n}","import refs from './refs';\nimport { createMarkup } from './createMarkup';\nimport clearPage from './clearPage';\nimport fetchMovies from './fetchMovie';\n\nconst { API_KEY, BASE_URL_ALL, arrowRight, arrowLeft } = refs;\n\nexport default async function updatePage(page = 1) {\n  //Запрос\n  const response = await fetch(\n    `${BASE_URL_ALL}?api_key=${API_KEY}&page=${page}`\n  );\n  const data = await response.json();\n \n  const reft = {\n    totalPageCount: data.total_pages,\n    currentPage: page,\n    pageNumbers: [],\n    maxPageBtn: 9,\n    nearEdgeThreshold: 3,\n    pageNumbersHtml: document.querySelector('.js-list'),\n  };\n  \n  const {\n    totalPageCount,\n    currentPage,\n    pageNumbers,\n    maxPageBtn,\n    nearEdgeThreshold,\n    pageNumbersHtml,\n  } = reft;\n\n  // Проверка на страницы \n  if (totalPageCount <= maxPageBtn) {\n    for (let i = 1; i <= totalPageCount; i++) {\n      pageNumbers.push(i);\n    }\n  }else {\n    // 1                 3  + 1\n    if (currentPage <= nearEdgeThreshold + 1) {\n      for (let i = 1; i <= maxPageBtn - 2; i += 1) {\n        pageNumbers.push(i);\n      }\n      pageNumbers.push('...');\n      pageNumbers.push(totalPageCount);\n    } else if (currentPage >= totalPageCount - nearEdgeThreshold) {\n      pageNumbers.push(1);\n      pageNumbers.push('...');\n      for (\n        let i = totalPageCount - maxPageBtn + 3;\n        i <= totalPageCount;\n        i += 1\n      ) {\n        pageNumbers.push(i);\n      }\n    } else {\n      pageNumbers.push(1);\n      pageNumbers.push('...');\n      for (\n        let i = currentPage - nearEdgeThreshold;\n        i <= currentPage + nearEdgeThreshold;\n        i += 1\n      ) {\n        pageNumbers.push(i);\n      }\n      pageNumbers.push('...');\n      pageNumbers.push(totalPageCount);\n    }\n  }\n  //Добовляем isactive на кнопку \n  const pageNumbersHTML = pageNumbers\n    .map((number) => {\n      if (number === '...') {\n        return `<span>${number}</span>`;\n      } else {\n        const activeClass = page === number ? 'isactive' : '';\n        return `<button class=\"js-page-number ${activeClass}\" data-page=\"${number}\">${number}</button>`;\n      }\n    })\n    .join('');\n\n\n  pageNumbersHtml.innerHTML = pageNumbersHTML;\n  arrowRight.disabled = page === totalPageCount;\n  arrowLeft.disabled = page === 1;\n\n  document.querySelectorAll('.js-page-number').forEach((button) => {\n    button.addEventListener('click', async () => {\n      const newPage = parseInt(button.dataset.page);\n      console.log(newPage);\n      if (!isNaN(newPage)) {\n        clearPage();\n        const data = await fetchMovies(page);\n        createMarkup(data);\n        updatePage(newPage);\n      }\n    });\n  });\n}\n\n"],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$krGWQ","API_KEY","$a0cac08c197f45b6$var$API_KEY","BASE_URL_ALL","$a0cac08c197f45b6$var$BASE_URL_ALL","BASE_URL_GENRE","$a0cac08c197f45b6$var$BASE_URL_GENRE","cards","$a0cac08c197f45b6$var$cards","default","$a0cac08c197f45b6$export$2e2bcd8739ae039","page","classList","add","allMoviesResponse","fetch","ok","statusText","allMoviesData","json","genreRequests","Promise","all","results","map","movieId","response","error","console","log","remove","$bb2db7a89a40ba72$var$cards","$bb2db7a89a40ba72$export$24783e9f3a24abe4","data","markup","successfulMoviesData","filter","movies","poster_path","title","genres","release_date","genr","item","name","join","dateMovie","slice","insertAdjacentHTML","$1GAPJ","$a6be473e5430189c$var$cards","$a6be473e5430189c$export$2e2bcd8739ae039","innerHTML","$9Uhgk","formSubmit","$615b248ed863778a$var$formSubmit","BASE_URL_QUERY","$615b248ed863778a$var$BASE_URL_QUERY","$615b248ed863778a$var$API_KEY","$615b248ed863778a$var$BASE_URL_GENRE","$615b248ed863778a$var$cards","pagination","$615b248ed863778a$var$pagination","$ad96d6d838aa2c0e$var$API_KEY","$ad96d6d838aa2c0e$var$BASE_URL_ALL","arrowRight","$ad96d6d838aa2c0e$var$arrowRight","arrowLeft","$ad96d6d838aa2c0e$var$arrowLeft","$ad96d6d838aa2c0e$export$2e2bcd8739ae039","totalPageCount","currentPage","pageNumbers","maxPageBtn","nearEdgeThreshold","pageNumbersHtml","total_pages","document","querySelector","i","push","pageNumbersHTML","number","activeClass","disabled","querySelectorAll","forEach","button","addEventListener","newPage","parseInt","dataset","isNaN","$4aAp5","$1f0dc3b9307be026$var$page","$1f0dc3b9307be026$var$arrowRight","$1f0dc3b9307be026$var$arrowLeft","$1f0dc3b9307be026$var$init","handleLeftClick","$1f0dc3b9307be026$var$handleLeftClick","handleRightClick","$1f0dc3b9307be026$var$handleRightClick","e","preventDefault","request","currentTarget","serchQuary","value","trim","Notify","info","total_results","successMovies","renderingMarkup","ids","genre","releaseDate","success","length","style","display"],"version":3,"file":"index.6fd1ed26.js.map"}