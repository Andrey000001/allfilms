!function(){var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},t={},a={},r=e.parcelRequired7c6;null==r&&((r=function(e){if(e in t)return t[e].exports;if(e in a){var r=a[e];delete a[e];var i={id:e,exports:{}};return t[e]=i,r.call(i.exports,i,i.exports),i.exports}var s=Error("Cannot find module '"+e+"'");throw s.code="MODULE_NOT_FOUND",s}).register=function(e,t){a[e]=t},e.parcelRequired7c6=r),r.register;var i=(r("4Nugj"),r("4Nugj"));let{API_KEY:s,BASE_URL_ALL:l,BASE_URL_GENRE:n,cards:o}=i.default;async function c(e=1){o.classList.add("loader");try{let t=await fetch(`${l}?api_key=${s}&page=${e}`);if(!t.ok)throw Error(t.statusText);let a=await t.json(),r=await Promise.all(a.results.map(async e=>{try{let t=await fetch(`${n}${e.id}?api_key=${s}&include_image_language=en,null`);if(!t.ok)throw Error(t.statusText);return await t.json()}catch(e){console.log("Error fetching genre information:",e)}}));return o.classList.remove("loader"),r}catch(e){console.log("Error fetching all movies:",e)}}var i=r("4Nugj");let{cards:u}=i.default;async function d(e){try{let t=e.filter(e=>{if(e&&null!==e.poster_path)return e}).map(({title:e,poster_path:t,genres:a,release_date:r,id:i})=>{let s=a.map(e=>e.name).join(", "),l=r.slice(0,4);return`
              <li class="page-item" data-id="${i}">
                 <a href="#" class="page-item__link">
                 <img src="https://image.tmdb.org/t/p/w500${t}">
                 <div class="page-description">
                     <h2 class="page-description__title">${e}</h2>
                     <p class="page-description__podscription">${s} <span>| ${l}</span></p>
                 </div>
                 </a>
              </li>`}).join(" ");u.insertAdjacentHTML("beforeend",t)}catch(e){console.log(e)}}var i=r("4Nugj"),p=r("ejkSG"),i=r("4Nugj");let{cards:f}=i.default;function g(){f.innerHTML=""}var h=r("l8JbC");let{formSubmit:m,BASE_URL_QUERY:_,API_KEY:y,BASE_URL_GENRE:w,cards:$,pagination:v}=i.default;(0,h.default)();var i=r("4Nugj");let{API_KEY:E,BASE_URL_ALL:L,arrowRight:j,arrowLeft:b,cards:N}=i.default;async function k(e=1){let t=await fetch(`${L}?api_key=${E}&page=${e}`),{totalPageCount:a,currentPage:r,pageNumbers:i,maxPageBtn:s,nearEdgeThreshold:l,pageNumbersHtml:n}={totalPageCount:(await t.json()).total_pages,currentPage:e,pageNumbers:[],maxPageBtn:9,nearEdgeThreshold:3,pageNumbersHtml:document.querySelector(".js-list")};if(a<=s)for(let e=1;e<=a;e+=1)i.push(e);else if(r<=l+1){for(let e=1;e<=s-2;e+=1)i.push(e);i.push("..."),i.push(a)}else if(r>=a-l){i.push(1),i.push("...");for(let e=a-s+3;e<=a;e+=1)i.push(e)}else{i.push(1),i.push("...");for(let e=r-l;e<=r+l;e+=1)i.push(e);i.push("..."),i.push(a)}let o=i.map(t=>{if("..."===t)return`<span>${t}</span>`;{let a=e===t?"isactive":"";return`<button class="js-page-number ${a}" data-page="${t}">${t}</button>`}}).join("");n.innerHTML=o,j.disabled=e===a,b.disabled=1===e,document.querySelectorAll(".js-page-number").forEach(t=>{t.addEventListener("click",async()=>{let a=parseInt(t.dataset.page);console.log(a),isNaN(a)||(g(),d(await c(e)),k(a))})})}var A=r("9OMvP");let R=1,{arrowRight:P,arrowLeft:T}=i.default;!async function(){let e=await c(R);await d(e),k()}();let{handleLeftClick:x,handleRightClick:S}={handleRightClick:async()=>{R+=1;try{g();let e=await c(R);d(e),k(R)}catch(e){console.error(e)}},handleLeftClick:async()=>{R-=1;try{g();let e=await c(R);d(e),k(R)}catch(e){console.error(e)}}};T.addEventListener("click",x),P.addEventListener("click",S),m.addEventListener("submit",async e=>{e.preventDefault();let t=e.currentTarget.serchQuary.value.trim();if(!t){(0,p.Notify).info("You have not entered anything");return}$.classList.add("loader");try{let e=await fetch(`${_}?api_key=${y}&query=${t}`),a=await e.json();if(0===a.total_pages||0===a.total_results){(0,p.Notify).info("Nothing found for your request");return}{let e=await a.results.filter(e=>{if(e&&null!==e.poster_path)return e}),t=await e.map(({id:e})=>e),r=await Promise.all(t.map(async e=>{let t=await fetch(`${w}${e}?api_key=${y}`),{title:a,poster_path:r,release_date:i,genres:s}=await t.json(),l=s.map(({name:e})=>e).join(" "),n=i.slice(0,4);return`
              <li class="page-item" data-id="${e}">
                  <a href="#" class="page-item__link">
                      <img class="page-item__img" src="https://image.tmdb.org/t/p/w500${r}" alt="${a}"/>
                      <div class="page-description">
                          <h2 class="page-description__title">${a}</h2>
                          <p class="page-description__podscription">${l} ${n}</p>
                      </div>
                  </a>
              </li>`}));(0,p.Notify).success(`According to your request
      found ${a.results.length} films`),g(),v.style.display="none",$.innerHTML=r.join(" ")}}catch(e){console.error("An error occurred while delivering data",console.error())}finally{$.classList.remove("loader")}}),(0,A.default)()}();
//# sourceMappingURL=index.49a8aca9.js.map
