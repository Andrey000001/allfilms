{"mappings":"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","sources":["<anon>","src/index.js","src/js/refs.js","src/js/fetchMovie.js","src/js/createMarkup.js","src/js/serchMovie.js","src/js/clearPage.js","src/js/plagination.js","src/js/currentMuvie.js"],"sourcesContent":["(function () {\nvar $37e33676934ad046$export$2e2bcd8739ae039 = {\n    //API\n    API_KEY: \"8c1c21cb3de0f31fcce2cce049e2c70c\",\n    BASE_URL_ALL: \"https://api.themoviedb.org/3/trending/all/day\",\n    BASE_URL_GENRE: \"https://api.themoviedb.org/3/movie/\",\n    BASE_URL_QUERY: \"https://api.themoviedb.org/3/search/movie\",\n    //main\n    cards: document.querySelector(\".js-cards\"),\n    arrowRight: document.querySelector(\".js-arrow-to_right\"),\n    arrowLeft: document.querySelector(\".js-arrow-to_left\"),\n    formSubmit: document.querySelector(\".form-page\")\n};\n\n\n\nconst { API_KEY: $30f8e97d7179aa3a$var$API_KEY, BASE_URL_ALL: $30f8e97d7179aa3a$var$BASE_URL_ALL, BASE_URL_GENRE: $30f8e97d7179aa3a$var$BASE_URL_GENRE } = (0, $37e33676934ad046$export$2e2bcd8739ae039);\nasync function $30f8e97d7179aa3a$export$2e2bcd8739ae039(page = 1) {\n    //Получаем все фильмы \n    const response = await fetch(`${$30f8e97d7179aa3a$var$BASE_URL_ALL}?api_key=${$30f8e97d7179aa3a$var$API_KEY}&page=${page}`);\n    const data = await response.json();\n    const genreRequests = await data.results.map(async (movieId)=>{\n        try {\n            //Получаем все инфу по ID\n            const resp = await fetch(`${$30f8e97d7179aa3a$var$BASE_URL_GENRE}${movieId.id}?api_key=${$30f8e97d7179aa3a$var$API_KEY}&include_image_language=en,null`);\n            if (!resp.ok) throw new Error(resp.statusText);\n            const data = await resp.json();\n            return data;\n        } catch (error) {\n            console.log(\"Errorrrrrr\", error);\n        }\n    });\n    return await Promise.all(genreRequests);\n}\n\n\n\nconst { cards: $7406f4e6957bfce5$var$cards } = (0, $37e33676934ad046$export$2e2bcd8739ae039);\nasync function $7406f4e6957bfce5$export$24783e9f3a24abe4(data) {\n    try {\n        //Отбираем те в которых есть фото и нет ошибки\n        const successfulMoviesData = data.filter((movies)=>{\n            if (!movies || movies.poster_path === null) return;\n            return movies;\n        });\n        const markup = successfulMoviesData.map(({ title: title, poster_path: poster_path, genres: genres, release_date: release_date, id: id })=>{\n            let genr = genres.map((item)=>item.name).join(\", \");\n            let dateMovie = release_date.slice(0, 4);\n            return `\n              <li class=\"page-item\" data-id=\"${id}\">\n                 <a href=\"#\" class=\"page-item__link\">\n                 <img src=\"https://image.tmdb.org/t/p/w500${poster_path}\">\n                 <div class=\"page-description\">\n                     <h2 class=\"page-description__title\">${title}</h2>\n                     <p class=\"page-description__podscription\">${genr} <span>| ${dateMovie}</span></p>\n                 </div>\n                 </a>\n              </li>`;\n        }).join(\" \");\n        $7406f4e6957bfce5$var$cards.insertAdjacentHTML(\"beforeend\", markup);\n    } catch (error) {\n        console.log(error);\n    }\n}\n\n\n\n\nconst { cards: $fbe7d694b28e6505$var$cards } = (0, $37e33676934ad046$export$2e2bcd8739ae039);\nfunction $fbe7d694b28e6505$export$2e2bcd8739ae039() {\n    $fbe7d694b28e6505$var$cards.innerHTML = \"\";\n}\n\n\nconst { formSubmit: $ebb6be35323636ab$var$formSubmit, BASE_URL_QUERY: $ebb6be35323636ab$var$BASE_URL_QUERY, API_KEY: $ebb6be35323636ab$var$API_KEY, BASE_URL_GENRE: $ebb6be35323636ab$var$BASE_URL_GENRE, cards: $ebb6be35323636ab$var$cards } = (0, $37e33676934ad046$export$2e2bcd8739ae039);\nfunction $ebb6be35323636ab$export$2e2bcd8739ae039() {\n    $ebb6be35323636ab$var$formSubmit.addEventListener(\"submit\", async (e)=>{\n        e.preventDefault();\n        const request = e.currentTarget.serchQuary.value.trim();\n        const response = await fetch(`${$ebb6be35323636ab$var$BASE_URL_QUERY}?api_key=${$ebb6be35323636ab$var$API_KEY}&query=${request}`);\n        const data = await response.json();\n        const successMovies = await data.results.filter((item)=>{\n            if (!item || item.poster_path === null) return;\n            return item;\n        });\n        const results = await successMovies.map(({ id: id })=>id);\n        const renderingMarkup = await Promise.all(results.map(async (ids)=>{\n            const response = await fetch(`${$ebb6be35323636ab$var$BASE_URL_GENRE}${ids}?api_key=${$ebb6be35323636ab$var$API_KEY}`);\n            const data = await response.json();\n            const { title: title, poster_path: poster_path, release_date: release_date, genres: genres } = data;\n            const genre = genres.map(({ name: name })=>name).join(\" \");\n            const releaseDate = release_date.slice(0, 4);\n            return `\n            <li class=\"page-item\" data-id=\"${ids}\">\n                <a href=\"#\" class=\"page-item__link\">\n                    <img src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"${title}\">\n                    <div class=\"page-description\">\n                        <h2 class=\"page-description__title\">${title}</h2>\n                        <p class=\"page-description__podscription\">${genre} ${releaseDate}</p>\n                    </div>\n                </a>\n            </li>`;\n        }));\n        (0, $fbe7d694b28e6505$export$2e2bcd8739ae039)();\n        $ebb6be35323636ab$var$cards.innerHTML = renderingMarkup.join(\" \");\n    });\n}\n\n\n\n\n\n\nconst { API_KEY: $fc7dd549232257de$var$API_KEY, BASE_URL_ALL: $fc7dd549232257de$var$BASE_URL_ALL, arrowRight: $fc7dd549232257de$var$arrowRight, arrowLeft: $fc7dd549232257de$var$arrowLeft } = (0, $37e33676934ad046$export$2e2bcd8739ae039);\nasync function $fc7dd549232257de$export$2e2bcd8739ae039(page = 1) {\n    const response = await fetch(`${$fc7dd549232257de$var$BASE_URL_ALL}?api_key=${$fc7dd549232257de$var$API_KEY}&page=${page}`);\n    console.log(page);\n    const data = await response.json();\n    const reft = {\n        totalPageCount: data.total_pages,\n        currentPage: page,\n        pageNumbers: [],\n        maxPageBtn: 9,\n        nearEdgeThreshold: 3,\n        pageNumbersHtml: document.querySelector(\".js-list\")\n    };\n    const { totalPageCount: totalPageCount, currentPage: currentPage, pageNumbers: pageNumbers, maxPageBtn: maxPageBtn, nearEdgeThreshold: nearEdgeThreshold, pageNumbersHtml: pageNumbersHtml } = reft;\n    if (totalPageCount <= maxPageBtn) for(let i = 1; i <= totalPageCount; i += 1)pageNumbers.push(i);\n    else {\n        // 1                 3  + 1\n        if (currentPage <= nearEdgeThreshold + 1) {\n            for(let i = 1; i <= maxPageBtn - 2; i += 1)pageNumbers.push(i);\n            pageNumbers.push(\"...\");\n            pageNumbers.push(totalPageCount);\n        } else if (currentPage >= totalPageCount - nearEdgeThreshold) {\n            pageNumbers.push(1);\n            pageNumbers.push(\"...\");\n            for(let i = totalPageCount - maxPageBtn + 3; i <= totalPageCount; i += 1)pageNumbers.push(i);\n        } else {\n            pageNumbers.push(1);\n            pageNumbers.push(\"...\");\n            for(let i = currentPage - nearEdgeThreshold; i <= currentPage + nearEdgeThreshold; i += 1)pageNumbers.push(i);\n            pageNumbers.push(\"...\");\n            pageNumbers.push(totalPageCount);\n        }\n    }\n    const pageNumbersHTML = pageNumbers.map((number)=>{\n        if (number === \"...\") return `<span>${number}</span>`;\n        else {\n            const activeClass = page === number ? \"isactive\" : \"\";\n            page === 1 && number;\n            return `<button class=\"js-page-number ${activeClass}\" data-page=\"${number}\">${number}</button>`;\n        }\n    }).join(\"\");\n    pageNumbersHtml.innerHTML = pageNumbersHTML;\n    $fc7dd549232257de$var$arrowRight.disabled = page === totalPageCount;\n    $fc7dd549232257de$var$arrowLeft.disabled = page === 1;\n    document.querySelectorAll(\".js-page-number\").forEach((button)=>{\n        button.addEventListener(\"click\", async ()=>{\n            const newPage = parseInt(button.dataset.page);\n            if (!isNaN(newPage)) {\n                page = newPage;\n                (0, $fbe7d694b28e6505$export$2e2bcd8739ae039)();\n                const data = await (0, $30f8e97d7179aa3a$export$2e2bcd8739ae039)(page);\n                (0, $7406f4e6957bfce5$export$24783e9f3a24abe4)(data);\n                $fc7dd549232257de$export$2e2bcd8739ae039();\n            }\n        });\n    });\n}\n\n\n\n\nconst { BASE_URL_GENRE: $725e6a2040daed23$var$BASE_URL_GENRE, API_KEY: $725e6a2040daed23$var$API_KEY } = (0, $37e33676934ad046$export$2e2bcd8739ae039);\nconst $725e6a2040daed23$var$modalContainer = document.createElement(\"div\");\n$725e6a2040daed23$var$modalContainer.classList.add(\"modal\");\ndocument.body.appendChild($725e6a2040daed23$var$modalContainer);\n$725e6a2040daed23$var$modalContainer.style.display = \"none\";\nasync function $725e6a2040daed23$export$2e2bcd8739ae039() {\n    window.addEventListener(\"click\", async (e)=>{\n        const pageItem = e.target.closest(\".page-item\");\n        if (pageItem) {\n            const gotId = pageItem.dataset.id;\n            const response = await fetch(`${$725e6a2040daed23$var$BASE_URL_GENRE}${gotId}?api_key=${$725e6a2040daed23$var$API_KEY}`);\n            const data = await response.json();\n            console.log(data);\n            const { genres: genres, title: title, poster_path: poster_path, vote_average: vote_average, vote_count: vote_count, original_title: original_title, popularity: popularity, overview: overview } = data;\n            const genreS = genres.map(({ name: name })=>name).join(\" | \");\n            const overage = vote_average.toString().slice(0, 3);\n            const vote = vote_count.toString();\n            function checkCorect(num) {\n                const parseValue = parseFloat(num);\n                if (!isNaN(parseValue)) {\n                    const popular = parseValue.toFixed(1);\n                    if (popular.endsWith(\".\")) return popular.slice(0, -1);\n                    else if (popular.endsWith(\".0\")) return popular.slice(0, -2);\n                    return popular;\n                }\n                return \"Invalid value\";\n            }\n            $725e6a2040daed23$var$modalContainer.innerHTML = \"\";\n            const backdrop = `\n              <div class=\"modal__container\">\n                <div class=\"modal-contant\">\n                <img src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"${title}\"/>\n                <article class=\"modal-article\">\n                     <h2 class=\"modal-article__title\">${title}</h2>\n                    <div class=\"info-modal\">\n                    \n                        <p class=\"info-modal__lean\">Vote / Votes<span class=\"info-modal__value overage-modal\">${overage}</span> / <span class=\"vote-modal info-modal__value\">${vote}</span></p>\n                        <p class=\"info-modal__lean\">Popularity<span class=\"info-modal__value popular-modal\">${checkCorect(popularity)}</span></p>\n                        <p class=\"info-modal__lean\">Original Title<span class=\"info-modal__value title-modal\">${original_title}</span></p>\n                        <p class=\"info-modal__lean\">Genre<span class=\"info-modal__value genre-modal\">${genreS}</span></p>\n                    </div>\n                    <p class=\"info-modal__about\">About</\\u{437}>\n                    <p class=\"info-modal__overview\">${overview}</p>\n                </article>\n                 <div class=\"modal-buttons\">\n                     <button class=\"modal-buttons__watched modal-button\">add to Watched</button>\n                     <button class=\"modal-buttons__queue modal-button\">add to queue</button>\n                 </div>\n                 </div>\n              </div>\n              `;\n            $725e6a2040daed23$var$modalContainer.innerHTML = backdrop;\n            $725e6a2040daed23$var$modalContainer.style.display = \"block\";\n        }\n        return;\n    });\n}\n\n\nlet $b8f9b7833fa37166$var$page = 1;\nconst { cards: $b8f9b7833fa37166$var$cards, arrowRight: $b8f9b7833fa37166$var$arrowRight, arrowLeft: $b8f9b7833fa37166$var$arrowLeft, formSubmit: $b8f9b7833fa37166$var$formSubmit } = (0, $37e33676934ad046$export$2e2bcd8739ae039);\n$b8f9b7833fa37166$var$init();\nasync function $b8f9b7833fa37166$var$init() {\n    const data = await (0, $30f8e97d7179aa3a$export$2e2bcd8739ae039)($b8f9b7833fa37166$var$page);\n    await (0, $7406f4e6957bfce5$export$24783e9f3a24abe4)(data);\n    (0, $fc7dd549232257de$export$2e2bcd8739ae039)();\n}\nconst $b8f9b7833fa37166$var$arrows = {\n    handleRightClick: async ()=>{\n        $b8f9b7833fa37166$var$page += 1;\n        try {\n            (0, $fbe7d694b28e6505$export$2e2bcd8739ae039)();\n            const data = await (0, $30f8e97d7179aa3a$export$2e2bcd8739ae039)($b8f9b7833fa37166$var$page);\n            (0, $7406f4e6957bfce5$export$24783e9f3a24abe4)(data);\n            (0, $fc7dd549232257de$export$2e2bcd8739ae039)($b8f9b7833fa37166$var$page);\n        } catch (error) {\n            console.error(error);\n        }\n    },\n    handleLeftClick: async ()=>{\n        $b8f9b7833fa37166$var$page -= 1;\n        try {\n            (0, $fbe7d694b28e6505$export$2e2bcd8739ae039)();\n            const data = await (0, $30f8e97d7179aa3a$export$2e2bcd8739ae039)($b8f9b7833fa37166$var$page);\n            (0, $7406f4e6957bfce5$export$24783e9f3a24abe4)(data);\n            (0, $fc7dd549232257de$export$2e2bcd8739ae039)($b8f9b7833fa37166$var$page);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n};\nconst { handleLeftClick: $b8f9b7833fa37166$var$handleLeftClick, handleRightClick: $b8f9b7833fa37166$var$handleRightClick } = $b8f9b7833fa37166$var$arrows;\n$b8f9b7833fa37166$var$arrowLeft.addEventListener(\"click\", $b8f9b7833fa37166$var$handleLeftClick);\n$b8f9b7833fa37166$var$arrowRight.addEventListener(\"click\", $b8f9b7833fa37166$var$handleRightClick);\n(0, $ebb6be35323636ab$export$2e2bcd8739ae039)();\n(0, $725e6a2040daed23$export$2e2bcd8739ae039)();\n\n})();\n//# sourceMappingURL=index.0598b32e.js.map\n","import refs from './js/refs';\nimport fetchMovies from './js/fetchMovie';\nimport { createMarkup } from './js/createMarkup';\nimport searchforNameMovie from './js/serchMovie';\nimport updatePage from './js/plagination';\nimport clearPage from './js/clearPage';\nimport touchMovieInfo from './js/currentMuvie';\n\nlet page = 1;\n\nconst { cards, arrowRight, arrowLeft, formSubmit } = refs;\n\ninit();\n\nasync function init() {\n  const data = await fetchMovies(page);\n  await createMarkup(data);\n  updatePage();\n}\n\nconst arrows = {\n  handleRightClick: async () => {\n    page += 1;\n    try {\n      clearPage();\n      const data = await fetchMovies(page);\n      createMarkup(data);\n      updatePage(page);\n    } catch (error) {\n      console.error(error);\n    }\n  },\n  handleLeftClick: async () => {\n    page -= 1;\n    try {\n      clearPage();\n      const data = await fetchMovies(page);\n      createMarkup(data);\n      updatePage(page);\n    } catch (error) {\n      console.error(error);\n    }\n  },\n};\n\nconst { handleLeftClick, handleRightClick } = arrows;\n\narrowLeft.addEventListener('click', handleLeftClick);\narrowRight.addEventListener('click', handleRightClick);\n\nsearchforNameMovie();\n\n\ntouchMovieInfo()","export default {\n    //API\n    API_KEY: '8c1c21cb3de0f31fcce2cce049e2c70c',\n    BASE_URL_ALL: 'https://api.themoviedb.org/3/trending/all/day',\n    BASE_URL_GENRE: 'https://api.themoviedb.org/3/movie/',\n    BASE_URL_QUERY: 'https://api.themoviedb.org/3/search/movie',\n    \n    //main\n    cards: document.querySelector('.js-cards'),\n    arrowRight: document.querySelector('.js-arrow-to_right'),\n    arrowLeft: document.querySelector('.js-arrow-to_left'),\n    formSubmit: document.querySelector('.form-page')\n}\n","import refs from \"./refs\";\nconst { API_KEY, BASE_URL_ALL, BASE_URL_GENRE} =\n  refs;\nexport default async function fetchMovies(page = 1) {\n    //Получаем все фильмы \n  const response = await fetch(\n    `${BASE_URL_ALL}?api_key=${API_KEY}&page=${page}`\n  );\n  const data = await response.json();\n\n  const genreRequests = await data.results.map(async movieId => {\n      try {\n          //Получаем все инфу по ID\n      const resp = await fetch(\n        `${BASE_URL_GENRE}${movieId.id}?api_key=${API_KEY}&include_image_language=en,null`\n      );\n      if (!resp.ok) {\n        throw new Error(resp.statusText);\n      }\n      const data = await resp.json();\n      return data;\n    } catch (error) {\n      console.log('Errorrrrrr', error);\n    }\n  });\n  return await Promise.all(genreRequests);\n}","import refs from \"./refs\";\nconst { cards } = refs;\n  async function createMarkup(data) {\n    try {\n      //Отбираем те в которых есть фото и нет ошибки\n      const successfulMoviesData = data.filter(movies => {\n        if (!movies || movies.poster_path === null) {\n          return;\n        }\n        return movies;\n      });\n\n      const markup = successfulMoviesData\n        .map(({ title, poster_path, genres, release_date ,id}) => {\n          let genr = genres.map(item => item.name).join(', ');\n          let dateMovie = release_date.slice(0, 4);\n  \n          return `\n              <li class=\"page-item\" data-id=\"${id}\">\n                 <a href=\"#\" class=\"page-item__link\">\n                 <img src=\"https://image.tmdb.org/t/p/w500${poster_path}\">\n                 <div class=\"page-description\">\n                     <h2 class=\"page-description__title\">${title}</h2>\n                     <p class=\"page-description__podscription\">${genr} <span>| ${dateMovie}</span></p>\n                 </div>\n                 </a>\n              </li>`;\n        })\n        .join(' ');\n      cards.insertAdjacentHTML('beforeend', markup);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  export {createMarkup}","import refs from './refs';\nimport clearPage from './clearPage';\n\nconst { formSubmit, BASE_URL_QUERY, API_KEY, BASE_URL_GENRE, cards } = refs;\n\nexport default function searchforNameMovie() {\n  formSubmit.addEventListener('submit', async e => {\n    e.preventDefault();\n    const request = e.currentTarget.serchQuary.value.trim();\n    const response = await fetch(\n      `${BASE_URL_QUERY}?api_key=${API_KEY}&query=${request}`\n    );\n    const data = await response.json();\n    const successMovies = await data.results.filter((item )=>  {\n        if(!item || item.poster_path === null) {\n            return\n        }\n        return item\n    })\n    \n    const results = await successMovies.map(({ id }) => id);\n\n    const renderingMarkup = await Promise.all(\n      results.map(async (ids) => {\n        \n        const response = await fetch(\n          `${BASE_URL_GENRE}${ids}?api_key=${API_KEY}`\n        );\n        const data = await response.json();\n        const { title, poster_path, release_date, genres } = data;\n        const genre = genres.map(({ name }) => name).join(' ');\n        const releaseDate = release_date.slice(0,4) \n        return `\n            <li class=\"page-item\" data-id=\"${ids}\">\n                <a href=\"#\" class=\"page-item__link\">\n                    <img src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"${title}\">\n                    <div class=\"page-description\">\n                        <h2 class=\"page-description__title\">${title}</h2>\n                        <p class=\"page-description__podscription\">${genre} ${releaseDate}</p>\n                    </div>\n                </a>\n            </li>`;\n      })\n    );\n    clearPage();\n    cards.innerHTML = renderingMarkup.join(' ');\n  });\n}\n","import refs from \"./refs\";\nconst {cards} = refs\n\nexport default function clearPage() {\n    cards.innerHTML = '';\n}","import refs from './refs';\nimport { createMarkup } from './createMarkup';\nimport clearPage from './clearPage';\nimport fetchMovies from './fetchMovie';\nconst { API_KEY, BASE_URL_ALL, arrowRight, arrowLeft } = refs;\n\nexport default async function updatePage(page = 1) {\n  const response = await fetch(\n    `${BASE_URL_ALL}?api_key=${API_KEY}&page=${page}`\n  );\n  console.log(page);\n  const data = await response.json();\n\n  const reft = {\n    totalPageCount: data.total_pages,\n    currentPage: page,\n    pageNumbers: [],\n    maxPageBtn: 9,\n    nearEdgeThreshold: 3,\n    pageNumbersHtml: document.querySelector('.js-list'),\n  };\n\n  const {\n    totalPageCount,\n    currentPage,\n    pageNumbers,\n    maxPageBtn,\n    nearEdgeThreshold,\n    pageNumbersHtml,\n  } = reft;\n\n  if (totalPageCount <= maxPageBtn) {\n    for (let i = 1; i <= totalPageCount; i += 1) {\n      pageNumbers.push(i);\n    }\n  } else {\n    // 1                 3  + 1\n    if (currentPage <= nearEdgeThreshold + 1) {\n      for (let i = 1; i <= maxPageBtn - 2; i += 1) {\n        pageNumbers.push(i);\n      }\n      pageNumbers.push('...');\n      pageNumbers.push(totalPageCount);\n    } else if (currentPage >= totalPageCount - nearEdgeThreshold) {\n      pageNumbers.push(1);\n      pageNumbers.push('...');\n      for (\n        let i = totalPageCount - maxPageBtn + 3;\n        i <= totalPageCount;\n        i += 1\n      ) {\n        pageNumbers.push(i);\n      }\n    } else {\n      pageNumbers.push(1);\n      pageNumbers.push('...');\n      for (\n        let i = currentPage - nearEdgeThreshold;\n        i <= currentPage + nearEdgeThreshold;\n        i += 1\n      ) {\n        pageNumbers.push(i);\n      }\n      pageNumbers.push('...');\n      pageNumbers.push(totalPageCount);\n    }\n  }\n\n  const pageNumbersHTML = pageNumbers\n    .map(number => {\n      if (number === '...') {\n        return `<span>${number}</span>`;\n      } else {\n        const activeClass = page === number ? 'isactive' : '';\n        page === 1 && number === 1 ? 'disabled' : '';\n        return `<button class=\"js-page-number ${activeClass}\" data-page=\"${number}\">${number}</button>`;\n      }\n    })\n    .join('');\n\n  pageNumbersHtml.innerHTML = pageNumbersHTML;\n\n  arrowRight.disabled = page === totalPageCount;\n  arrowLeft.disabled = page === 1;\n\n  document.querySelectorAll('.js-page-number').forEach(button => {\n    button.addEventListener('click', async () => {\n      const newPage = parseInt(button.dataset.page);\n      if (!isNaN(newPage)) {\n        page = newPage;\n        clearPage();\n        const data = await fetchMovies(page);\n        createMarkup(data);\n        updatePage();\n      }\n    });\n  });\n}\n\n","import refs from './refs';\nconst { BASE_URL_GENRE, API_KEY } = refs;\n\nconst modalContainer = document.createElement('div');\nmodalContainer.classList.add('modal');\ndocument.body.appendChild(modalContainer);\nmodalContainer.style.display = 'none';\n\nexport default async function touchMovieInfo() {\n  window.addEventListener('click', async e => {\n    const pageItem = e.target.closest('.page-item');\n    if (pageItem) {\n      const gotId = pageItem.dataset.id;\n      const response = await fetch(\n        `${BASE_URL_GENRE}${gotId}?api_key=${API_KEY}`\n      );\n      const data = await response.json();\n      console.log(data);\n      const {\n        genres,\n        title,\n        poster_path,\n        vote_average,\n        vote_count,\n        original_title,\n        popularity,\n        overview,\n      } = data;\n      const genreS = genres.map(({ name }) => name).join(' | ');\n      const overage = vote_average.toString().slice(0, 3);\n      const vote = vote_count.toString();\n\n      function checkCorect(num) {\n        const parseValue = parseFloat(num);\n        if (!isNaN(parseValue)) {\n          const popular = parseValue.toFixed(1);\n          if (popular.endsWith('.')) {\n            return popular.slice(0, -1);\n          } else if (popular.endsWith('.0')) {\n            return popular.slice(0, -2);\n          }\n          return popular;\n        }\n        return 'Invalid value';\n      }\n      modalContainer.innerHTML = '';\n      const backdrop = `\n              <div class=\"modal__container\">\n                <div class=\"modal-contant\">\n                <img src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"${title}\"/>\n                <article class=\"modal-article\">\n                     <h2 class=\"modal-article__title\">${title}</h2>\n                    <div class=\"info-modal\">\n                    \n                        <p class=\"info-modal__lean\">Vote / Votes<span class=\"info-modal__value overage-modal\">${overage}</span> / <span class=\"vote-modal info-modal__value\">${vote}</span></p>\n                        <p class=\"info-modal__lean\">Popularity<span class=\"info-modal__value popular-modal\">${checkCorect(\n                          popularity\n                        )}</span></p>\n                        <p class=\"info-modal__lean\">Original Title<span class=\"info-modal__value title-modal\">${original_title}</span></p>\n                        <p class=\"info-modal__lean\">Genre<span class=\"info-modal__value genre-modal\">${genreS}</span></p>\n                    </div>\n                    <p class=\"info-modal__about\">About</з>\n                    <p class=\"info-modal__overview\">${overview}</p>\n                </article>\n                 <div class=\"modal-buttons\">\n                     <button class=\"modal-buttons__watched modal-button\">add to Watched</button>\n                     <button class=\"modal-buttons__queue modal-button\">add to queue</button>\n                 </div>\n                 </div>\n              </div>\n              `;\n      modalContainer.innerHTML = backdrop;\n      modalContainer.style.display = 'block';\n    }\n    return;\n  });\n}\n"],"names":["$37e33676934ad046$export$2e2bcd8739ae039","API_KEY","BASE_URL_ALL","BASE_URL_GENRE","BASE_URL_QUERY","cards","document","querySelector","arrowRight","arrowLeft","formSubmit","$30f8e97d7179aa3a$var$API_KEY","$30f8e97d7179aa3a$var$BASE_URL_ALL","$30f8e97d7179aa3a$var$BASE_URL_GENRE","$30f8e97d7179aa3a$export$2e2bcd8739ae039","page","response","fetch","data","json","genreRequests","results","map","movieId","resp","id","ok","Error","statusText","error","console","log","Promise","all","$7406f4e6957bfce5$var$cards","$7406f4e6957bfce5$export$24783e9f3a24abe4","markup","successfulMoviesData","filter","movies","poster_path","title","genres","release_date","genr","item","name","join","dateMovie","slice","insertAdjacentHTML","$fbe7d694b28e6505$var$cards","$fbe7d694b28e6505$export$2e2bcd8739ae039","innerHTML","$ebb6be35323636ab$var$formSubmit","$ebb6be35323636ab$var$BASE_URL_QUERY","$ebb6be35323636ab$var$API_KEY","$ebb6be35323636ab$var$BASE_URL_GENRE","$ebb6be35323636ab$var$cards","$fc7dd549232257de$var$API_KEY","$fc7dd549232257de$var$BASE_URL_ALL","$fc7dd549232257de$var$arrowRight","$fc7dd549232257de$var$arrowLeft","$fc7dd549232257de$export$2e2bcd8739ae039","totalPageCount","currentPage","pageNumbers","maxPageBtn","nearEdgeThreshold","pageNumbersHtml","total_pages","i","push","pageNumbersHTML","number","activeClass","disabled","querySelectorAll","forEach","button","addEventListener","newPage","parseInt","dataset","isNaN","$725e6a2040daed23$var$BASE_URL_GENRE","$725e6a2040daed23$var$API_KEY","$725e6a2040daed23$var$modalContainer","createElement","$725e6a2040daed23$export$2e2bcd8739ae039","window","e","pageItem","target","closest","gotId","vote_average","vote_count","original_title","popularity","overview","genreS","overage","toString","vote","backdrop","checkCorect","num","parseValue","parseFloat","popular","toFixed","endsWith","style","display","classList","add","body","appendChild","$b8f9b7833fa37166$var$page","$b8f9b7833fa37166$var$cards","$b8f9b7833fa37166$var$arrowRight","$b8f9b7833fa37166$var$arrowLeft","$b8f9b7833fa37166$var$formSubmit","$b8f9b7833fa37166$var$init","handleLeftClick","$b8f9b7833fa37166$var$handleLeftClick","handleRightClick","$b8f9b7833fa37166$var$handleRightClick","preventDefault","request","currentTarget","serchQuary","value","trim","successMovies","renderingMarkup","ids","genre","releaseDate"],"version":3,"file":"index.0598b32e.js.map"}